{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy a service into an ECS cluster behind a public load balancer.",
    "Parameters": {
        "EnvironmentName": {
            "Type": "String",
            "Default": "production",
            "Description": "The name of the environment to add this service to"
        },
        "ServiceName": {
            "Type": "String",
            "Default": "nginx",
            "Description": "A name for the service"
        },
        "ImageUrl": {
            "Type": "String",
            "Default": "nginx",
            "Description": "The url of a docker image that contains the application process that will handle the traffic for this service"
        },
        "ContainerPort": {
            "Type": "Number",
            "Default": 80,
            "Description": "What port number the application inside the docker container is binding to"
        },
        "ContainerCpu": {
            "Type": "Number",
            "Default": 256,
            "Description": "How much CPU to give the container. 1024 is 1 CPU"
        },
        "ContainerMemory": {
            "Type": "Number",
            "Default": 512,
            "Description": "How much memory in megabytes to give the container"
        },
        "Path": {
            "Type": "String",
            "Default": "*",
            "Description": "A path on the public load balancer that this service should be connected to. Use * to send all load balancer traffic to this service."
        },
        "Priority": {
            "Type": "Number",
            "Default": 1,
            "Description": "The priority for the routing rule added to the load balancer. This only applies if your have multiple services which have been assigned to different paths on the load balancer."
        },
        "DesiredCount": {
            "Type": "Number",
            "Default": 2,
            "Description": "How many copies of the service task to run"
        },
        "Role": {
            "Type": "String",
            "Default": "",
            "Description": "(Optional) An IAM role to give the service's containers if the code within needs to access other AWS resources like S3 buckets, DynamoDB tables, etc"
        }
    },
    "Conditions": {
        "HasCustomRole": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Role"
                        },
                        ""
                    ]
                }
            ]
        }
    },
    "Resources": {
        "LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "${EnvironmentName}-service-${ServiceName}"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a1370e72-3b34-4168-ab0b-3bd9444c07cc"
                }
            }
        },
        "TaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Family": {
                    "Ref": "ServiceName"
                },
                "Cpu": {
                    "Ref": "ContainerCpu"
                },
                "Memory": {
                    "Ref": "ContainerMemory"
                },
                "TaskRoleArn": {
                    "Fn::If": [
                        "HasCustomRole",
                        {
                            "Ref": "Role"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "ContainerDefinitions": [
                    {
                        "Name": {
                            "Ref": "ServiceName"
                        },
                        "Cpu": {
                            "Ref": "ContainerCpu"
                        },
                        "Memory": {
                            "Ref": "ContainerMemory"
                        },
                        "Image": {
                            "Ref": "ImageUrl"
                        },
                        "PortMappings": [
                            {
                                "ContainerPort": {
                                    "Ref": "ContainerPort"
                                }
                            }
                        ],
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Fn::Sub": "${EnvironmentName}-service-${ServiceName}"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": {
                                    "Ref": "ServiceName"
                                }
                            }
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "27391d7e-15d9-46d6-94cf-1d7bf56c41b5"
                }
            }
        },
        "Service": {
            "Type": "AWS::ECS::Service",
            "DependsOn": "LoadBalancerRule",
            "Properties": {
                "ServiceName": {
                    "Ref": "ServiceName"
                },
                "Cluster": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${EnvironmentName}:ClusterName"
                    }
                },
                "DeploymentConfiguration": {
                    "MaximumPercent": 200,
                    "MinimumHealthyPercent": 75
                },
                "DesiredCount": {
                    "Ref": "DesiredCount"
                },
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                },
                "LoadBalancers": [
                    {
                        "ContainerName": {
                            "Ref": "ServiceName"
                        },
                        "ContainerPort": {
                            "Ref": "ContainerPort"
                        },
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7863ead9-d407-47e3-9b78-c9b2542ad80b"
                }
            }
        },
        "TargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 6,
                "HealthCheckPath": "/",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "Name": {
                    "Ref": "ServiceName"
                },
                "Port": 80,
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 2,
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${EnvironmentName}:VpcId"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "bc211623-320a-4315-9558-c60d6ceec075"
                }
            }
        },
        "LoadBalancerRule": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties": {
                "Actions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        },
                        "Type": "forward"
                    }
                ],
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            {
                                "Ref": "Path"
                            }
                        ]
                    }
                ],
                "ListenerArn": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${EnvironmentName}:PublicListener"
                    }
                },
                "Priority": {
                    "Ref": "Priority"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9eea30fb-b263-4780-9a7f-39ca3be4052f"
                }
            }
        },
        "ScalableTarget": {
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
            "DependsOn": "Service",
            "Properties": {
                "ServiceNamespace": "ecs",
                "ScalableDimension": "ecs:service:DesiredCount",
                "ResourceId": {
                    "Fn::Join": [
                        "/",
                        [
                            "service",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${EnvironmentName}:ClusterName"
                                }
                            },
                            {
                                "Ref": "ServiceName"
                            }
                        ]
                    ]
                },
                "MinCapacity": 2,
                "MaxCapacity": 10,
                "RoleARN": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${EnvironmentName}:AutoscalingRole"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "05987731-dd00-4c93-b391-81fbb71365c9"
                }
            }
        },
        "ScaleDownPolicy": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "DependsOn": "ScalableTarget",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "/",
                        [
                            "scale",
                            {
                                "Ref": "EnvironmentName"
                            },
                            {
                                "Ref": "ServiceName"
                            },
                            "down"
                        ]
                    ]
                },
                "PolicyType": "StepScaling",
                "ResourceId": {
                    "Fn::Join": [
                        "/",
                        [
                            "service",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${EnvironmentName}:ClusterName"
                                }
                            },
                            {
                                "Ref": "ServiceName"
                            }
                        ]
                    ]
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ServiceNamespace": "ecs",
                "StepScalingPolicyConfiguration": {
                    "AdjustmentType": "ChangeInCapacity",
                    "StepAdjustments": [
                        {
                            "MetricIntervalUpperBound": 0,
                            "ScalingAdjustment": -1
                        }
                    ],
                    "MetricAggregationType": "Average",
                    "Cooldown": 60
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6775132b-6408-4a9c-9e31-7e8748dbb110"
                }
            }
        },
        "ScaleUpPolicy": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "DependsOn": "ScalableTarget",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "/",
                        [
                            "scale",
                            {
                                "Ref": "EnvironmentName"
                            },
                            {
                                "Ref": "ServiceName"
                            },
                            "up"
                        ]
                    ]
                },
                "PolicyType": "StepScaling",
                "ResourceId": {
                    "Fn::Join": [
                        "/",
                        [
                            "service",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${EnvironmentName}:ClusterName"
                                }
                            },
                            {
                                "Ref": "ServiceName"
                            }
                        ]
                    ]
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ServiceNamespace": "ecs",
                "StepScalingPolicyConfiguration": {
                    "AdjustmentType": "ChangeInCapacity",
                    "StepAdjustments": [
                        {
                            "MetricIntervalLowerBound": 0,
                            "MetricIntervalUpperBound": 15,
                            "ScalingAdjustment": 1
                        },
                        {
                            "MetricIntervalLowerBound": 15,
                            "MetricIntervalUpperBound": 25,
                            "ScalingAdjustment": 2
                        },
                        {
                            "MetricIntervalLowerBound": 25,
                            "ScalingAdjustment": 3
                        }
                    ],
                    "MetricAggregationType": "Average",
                    "Cooldown": 60
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6fc4f03a-f6e7-4f8c-bc0c-c70e2b4a80eb"
                }
            }
        },
        "LowCpuUsageAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmName": {
                    "Fn::Join": [
                        "-",
                        [
                            "low-cpu",
                            {
                                "Ref": "EnvironmentName"
                            },
                            {
                                "Ref": "ServiceName"
                            }
                        ]
                    ]
                },
                "AlarmDescription": {
                    "Fn::Join": [
                        " ",
                        [
                            "Low CPU utilization for service",
                            {
                                "Ref": "ServiceName"
                            },
                            "in environment",
                            {
                                "Ref": "EnvironmentName"
                            }
                        ]
                    ]
                },
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/ECS",
                "Dimensions": [
                    {
                        "Name": "ServiceName",
                        "Value": {
                            "Ref": "ServiceName"
                        }
                    },
                    {
                        "Name": "ClusterName",
                        "Value": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${EnvironmentName}:ClusterName"
                            }
                        }
                    }
                ],
                "Statistic": "Average",
                "Period": 60,
                "EvaluationPeriods": 1,
                "Threshold": 20,
                "ComparisonOperator": "LessThanOrEqualToThreshold",
                "AlarmActions": [
                    {
                        "Ref": "ScaleDownPolicy"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "bbb95e4d-c44e-4543-b51f-b365f7c7ea7a"
                }
            }
        },
        "HighCpuUsageAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmName": {
                    "Fn::Join": [
                        "-",
                        [
                            "high-cpu",
                            {
                                "Ref": "EnvironmentName"
                            },
                            {
                                "Ref": "ServiceName"
                            }
                        ]
                    ]
                },
                "AlarmDescription": {
                    "Fn::Join": [
                        " ",
                        [
                            "High CPU utilization for service",
                            {
                                "Ref": "ServiceName"
                            },
                            "in environment",
                            {
                                "Ref": "EnvironmentName"
                            }
                        ]
                    ]
                },
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/ECS",
                "Dimensions": [
                    {
                        "Name": "ServiceName",
                        "Value": {
                            "Ref": "ServiceName"
                        }
                    },
                    {
                        "Name": "ClusterName",
                        "Value": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${EnvironmentName}:ClusterName"
                            }
                        }
                    }
                ],
                "Statistic": "Average",
                "Period": 60,
                "EvaluationPeriods": 1,
                "Threshold": 70,
                "ComparisonOperator": "GreaterThanOrEqualToThreshold",
                "AlarmActions": [
                    {
                        "Ref": "ScaleUpPolicy"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d0a17886-b907-4b7d-ba59-1f62c9ff2dba"
                }
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "bc211623-320a-4315-9558-c60d6ceec075": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 270,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "9eea30fb-b263-4780-9a7f-39ca3be4052f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 270,
                    "y": 220
                },
                "z": 1,
                "embeds": []
            },
            "27391d7e-15d9-46d6-94cf-1d7bf56c41b5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 470,
                    "y": 0
                },
                "z": 1,
                "embeds": []
            },
            "7863ead9-d407-47e3-9b78-c9b2542ad80b": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 390,
                    "y": 90
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "9eea30fb-b263-4780-9a7f-39ca3be4052f"
                ]
            },
            "05987731-dd00-4c93-b391-81fbb71365c9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 540,
                    "y": 200
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "7863ead9-d407-47e3-9b78-c9b2542ad80b"
                ]
            },
            "6fc4f03a-f6e7-4f8c-bc0c-c70e2b4a80eb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 540,
                    "y": 300
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "05987731-dd00-4c93-b391-81fbb71365c9"
                ]
            },
            "d0a17886-b907-4b7d-ba59-1f62c9ff2dba": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 660,
                    "y": 300
                },
                "z": 1,
                "embeds": []
            },
            "6775132b-6408-4a9c-9e31-7e8748dbb110": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 670,
                    "y": 200
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "05987731-dd00-4c93-b391-81fbb71365c9"
                ]
            },
            "bbb95e4d-c44e-4543-b51f-b365f7c7ea7a": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 780,
                    "y": 200
                },
                "z": 1,
                "embeds": []
            },
            "a1370e72-3b34-4168-ab0b-3bd9444c07cc": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 70,
                    "y": 110
                },
                "z": 1,
                "embeds": []
            }
        }
    }
}
